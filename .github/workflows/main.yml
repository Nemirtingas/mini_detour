name: CI

on: [push]
jobs:
  job:
    name: ${{ matrix.os }}-${{ matrix.platform }}-cmake-build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        platform: [x32, x64]
        exclude:
        - os: macos-latest
          platform: x32
            
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: lukka/get-cmake@latest

      - name: Linux tests gcc (x32)
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.platform == 'x32' }}
        shell: bash
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt install -y gcc-multilib g++-multilib # needed for 32-bit builds
          
          cmake ${{ github.workspace }}/CMakeLists.txt -DCMAKE_TOOLCHAIN_FILE="tests/toolchains/linux_i386.toolchain" -DCMAKE_BUILD_TYPE=Debug -DMINIDETOUR_BUILD_TESTS=ON -S . -B build
          cmake --build build
          #find build
          cd ${{ github.workspace }}/build
          ./tests

      - name: Linux tests gcc (x64)
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.platform == 'x64' }}
        shell: bash
        run: |
          sudo apt-get update
          sudo apt install -y gcc-arm-linux-gnueabi g++-arm-linux-gnueabi gcc-aarch64-linux-gnu g++-aarch64-linux-gnu qemu-user
          
          cmake ${{ github.workspace }}/CMakeLists.txt -DCMAKE_TOOLCHAIN_FILE="tests/toolchains/linux_arm.toolchain" -DCMAKE_BUILD_TYPE=Debug -DMINIDETOUR_BUILD_TESTS=ON -S . -B build/linux_arm
          cmake --build build/linux_arm
          
          cmake ${{ github.workspace }}/CMakeLists.txt -DCMAKE_TOOLCHAIN_FILE="tests/toolchains/linux_aarch64.toolchain" -DCMAKE_BUILD_TYPE=Debug -DMINIDETOUR_BUILD_TESTS=ON -S . -B build/linux_aarch64
          cmake --build build/linux_aarch64
          
          cmake ${{ github.workspace }}/CMakeLists.txt -DCMAKE_BUILD_TYPE=Debug -DMINIDETOUR_BUILD_TESTS=ON -S . -B build/linux_x64
          cmake --build build/linux_x64
          
          echo "### Running ARM tests ###"
          cd ${{ github.workspace }}/build/linux_arm/
          qemu-arm -L /usr/arm-linux-gnueabi ./tests || echo "Failed"
          echo "### Running AARCH64 tests ###"
          cd ${{ github.workspace }}/build/linux_aarch64/
          qemu-aarch64 -L /usr/aarch64-linux-gnu ./tests || echo "Failed"
          echo "### Running X64 tests ###"
          cd ${{ github.workspace }}/build/linux_x64/
          ./tests

      - name: MacOS tests
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          cmake ${{ github.workspace }}/CMakeLists.txt -DCMAKE_BUILD_TYPE=Debug -DMINIDETOUR_BUILD_TESTS=ON -S . -B build
          cmake --build build
          #find build
          cd ${{ github.workspace }}/build
          ./macos_permission_fix tests
          ./tests

      - name: Windows tests (x32)
        if: ${{ matrix.os == 'windows-latest' && matrix.platform == 'x32' }}
        shell: powershell
        run: |
          cmake ${{ github.workspace }}\CMakeLists.txt -DCMAKE_BUILD_TYPE=Debug -DMINIDETOUR_BUILD_TESTS=ON -S . -B build -A Win32
          cmake --build build
          #Get-ChildItem -Recurse build
          cd ${{ github.workspace }}\build\Debug
          .\tests.exe

      - name: Windows tests (x64)
        if: ${{ matrix.os == 'windows-latest' && matrix.platform == 'x64' }}
        shell: powershell
        run: |
          cmake ${{ github.workspace }}\CMakeLists.txt -DCMAKE_BUILD_TYPE=Debug -DMINIDETOUR_BUILD_TESTS=ON -S . -B build -A x64
          cmake --build build
          #Get-ChildItem -Recurse build
          cd ${{ github.workspace }}\build\Debug
          .\tests.exe
